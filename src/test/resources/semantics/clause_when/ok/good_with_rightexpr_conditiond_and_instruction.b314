/* My comments */
declare and retain
	b1 as boolean;
	b2 as boolean;
    i1 as integer;
    i2 as integer;
    i3 as integer;
    s1 as square;
    s2 as square;

    fct1 as function():void
    	do
    		skip
    		return void
    	done

    fct2 as function(x as integer, y as boolean):integer
    	do
    		skip
    		return i1
    	done

    fct3 as function():boolean
    	do
    		skip
    		return b1
    	done

    fct4 as function():square
    	do
    		skip
    		return s1
    	done

    fct5 as function(x as integer, y as boolean, z as square):integer
    	do
    		skip
    		return i2
    	done

when your turn

	when true and b1 or v1[0, i1 + 2 * 5] do
		if b1 and i1 = 2 then
			while i1 < i3 do
				set i2 to i1 + 1
			done
		else
			if s1 = ammo then
				next do nothing
			done
		done
	done

	when false do
		skip
	done

	when not graal is north and i2 > 5 and v2[4] < 42 or s1 = dirt do
    	compute fct1()
    	set s1 to fct4()
    	if fct5(i1 + 2, s2 = ammo, latitude) > 2 then
    		skip
    	done
    	while fct3() do
    		skip
    	done
    	next move west
	done

	by default do
		skip
	done