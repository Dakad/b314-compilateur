declare and retain
	b1 as boolean;
	b2 as boolean;
  i1 as integer;
  i2 as integer;
  s1 as square;
  s2 as square;

  fct2 as function(x as integer, y as boolean):integer
    do
      skip
      return i2;
    done

  fct3 as function():boolean
    do
      skip
      return b1;
    done

  fct4 as function():square
    do
      skip
      return s1;
    done

  fct5 as function(x as integer, y as boolean, z as square):integer
    do
      skip
      return i1;
    done

  when your turn

    when true and b1 or v1[0, i1 + 2 * 5] do
      skip
    done

    when false do
      skip
    done

    when not graal is north and i2 > 5 and v2[4] < 42 or s1 = dirt do
      skip
    done

	by default do
		skip
	done