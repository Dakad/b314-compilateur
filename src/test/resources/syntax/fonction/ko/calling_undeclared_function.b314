declare and retain
 b1 as boolean ;
 b2 as boolean ;
 b3 as boolean ;
 i1 as integer ;
 b4 as boolean ;
 b5 as boolean ;
 f2 as integer ;
 f3 as boolean ;

 fct2 as function ( x as integer , y as boolean  ): integer
  do
    skip
  return f2
  done

 fct3 as function (  ): boolean
  do
    set f3 to true and false or not graal is north or b1 and b2
  return f3
  done

 s1 as square ;
 i2 as integer ;
 b6 as boolean ;
 i3 as integer ;
 s2 as square ;
 f4 as square ;
 f5 as integer ;
 fct4 as function (  ): square
 do skip
 return f4
 done

  fct5 as function ( x as integer , y as boolean , z as square  ): integer
  do
  if y and x = 2 then
    while x < i3 do
      set x to x + 1
    done
  else
    if z = ammo then
      next do nothing
    done
  done
  return x
  done
when your turn
  by default
  do
  compute fct1( )
  if 2 > 1 then
   skip
  done
  while fct3( ))) do
    skip
  done
done
